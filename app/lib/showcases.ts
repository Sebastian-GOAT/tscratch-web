type Showcase = {
    name: string;
    short: string;
    description: string;
    img: string;
};

const showcases: Showcase[] = [
    {
        name: 'Tree Fractal',
        short: 'tree-fractal',
        description: 'This showcase is a classic visualization of an L-system fractal, created through a process of recursive branching that demonstrates the self-similarity found in natural structures like trees and ferns. Itâ€™s an excellent example of using simple rules to generate complex, organic-looking geometry.',
        img: '/images/tree-fractal.png'
    },
    {
        name: 'Pythagoras Tree',
        short: 'pythagoras-tree',
        description: 'This is a distinctive, plant-like fractal constructed entirely from squares. The pattern is generated by having each branch split to form a right-angled triangle, with the new squares built upon the other two sides. The design is a clever visual homage to the famous Pythagorean theorem of geometry.',
        img: '/images/pythagoras-tree.png'
    },
    {
        name: 'Pyramid Fractal',
        short: 'pyramid-fractal',
        description: 'This program explores a three-dimensional fractal pattern based on a pyramid or a tetrahedron shape. It typically generates a version of the Sierpinski pyramid, where the basic shape is repeatedly divided and hollowed out at the center, demonstrating increasing complexity and infinite detail.',
        img: '/images/pyramid-fractal.png'
    },
    {
        name: 'Ball Bouncing',
        short: 'ball-bouncing',
        description: 'This simple yet fundamental project is a 2D physics simulation. It illustrates core concepts like gravity, velocity, and elastic collisions by calculating the path of a ball as it falls and bounces off surfaces, creating a realistic, continuous motion effect.',
        img: '/images/ball-bouncing.png'
    },
    {
        name: 'Inverse Kinematics',
        short: 'inverse-kinematics',
        description: 'This simulation is a powerful demonstration of calculating movement for a jointed chain or robotic arm. Instead of moving each joint individually, the system calculates the necessary angles for all joints to precisely move the end-effector (the "hand") to a specific target position.',
        img: '/images/inverse-kinematics.png'
    },
    {
        name: 'Snowflake Generator',
        short: 'snowflake-generator',
        description: 'This is a generative program designed to create unique and intricate snowflake-like patterns. It often achieves its delicate structure by implementing the mathematical principles of the Koch curve or other algorithms that enforce hexagonal symmetry and recursive detail.',
        img: '/images/snowflake-generator.png'
    },
    {
        name: 'Abstract Art Generator',
        short: 'abstract-art',
        description: 'This showcase is an example of generative art, which uses trigonometric functions and random number generation to produce unique, non-representational, and visually appealing compositions. It highlights the use of code as a creative artistic tool.',
        img: '/images/abstract-art.png'
    }
];

export default showcases;